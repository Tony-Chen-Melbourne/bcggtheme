load("C:/Users/Jacqueline Zhu/Downloads/grattan_grey5.rda")
?use_data
devtools::use_data(bcg_green_1, bcg_green_2, bcg_green_3, bcg_green_4, bcg_yellow, bcg_grey)
use_data(bcg_green_1, bcg_green_2, bcg_green_3, bcg_green_4, bcg_yellow, bcg_grey)
library(devtools)
use_data(bcg_green_1, bcg_green_2, bcg_green_3, bcg_green_4, bcg_yellow, bcg_grey)
bcg_green_1 <- "#2ABA75"
bcg_green_2 <- "#1A7A55"
bcg_green_3 <- "#60DB66"
bcg_green_4 <- "#64A64F"
bcg_yellow <- "#DEE341"
bcg_red <- "#E71B56"
bcg_grey <- "#808080"
use_data(bcg_green_1, bcg_green_2, bcg_green_3, bcg_green_4, bcg_yellow, bcg_grey)
use_data(bcg_palette)
bcg_palette <- c(bcg_green_1, bcg_green_2, bcg_green_3, bcg_green_4, bcg_yellow, bcg_grey)
use_data(bcg_palette)
document()
library(devtools)
document()
2-1
install("bcggtheme")
setwd("..")
install("bcggtheme")
library(tidyverse)
mtcars %>% ggplot(aes(x = cyl, y = mpg)) + geom_line() + bcg_theme_classic()
mtcars %>% ggplot(aes(x = cyl, y = mpg)) + geom_line(colour = bcg_green_1) + bcg_theme_classic()
mtcars %>% ggplot(aes(x = cyl, y = mpg, colour = hp)) + geom_line(colour = bcg_green_1) + bcg_theme_classic()
mtcars$wt
mtcars %>% ggplot(aes(x = cyl, y = mpg, colour = wt)) + geom_line(colour = bcg_green_1) + bcg_theme_classic()
mtcars %>% ggplot(aes(x = cyl, y = mpg, colour = wt)) + geom_line() + bcg_theme_classic()
mtcars %>% ggplot(aes(x = cyl, y = mpg, colour = wt, group = wt)) + geom_line() + bcg_theme_classic()
document()
devtools::document()
bcg_theme_classic <- function(base_size = 18,
base_family = "sans",
legend = "bottom",
y_axis = FALSE) {
ret <- if(y_axis == FALSE) {
ggplot2::theme_classic() +
theme(text = element_text(family= base_family,
size = base_size),
axis.text.x = element_text(colour = "black", size = base_size),
axis.line = element_line(color = bcggtheme::bcg_grey),
axis.line.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(size=(base_size+2)),
plot.subtitle = element_text(size=base_size)
) +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.text = element_text(size = (base_size-4))
}
else if (y_axis == TRUE) {
ggplot2::theme_classic() +
theme(text = element_text(family= base_family,
size = base_size),
axis.text.x = element_text(colour = "black", size = base_size),
axis.line = element_line(color = bcggtheme::bcg_grey),
#axis.line.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(size=(base_size+2)),
plot.subtitle = element_text(size=base_size)
) +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.text = element_text(size = (base_size-4))
}
else {"y_axis only takes the values TRUE and FALSE"}
return(ret)
}
bcg_theme_classic <- function(base_size = 18,
base_family = "sans",
legend = "bottom",
y_axis = FALSE) {
ret <- if(y_axis == FALSE) {
ggplot2::theme_classic() +
theme(text = element_text(family= base_family,
size = base_size),
axis.text.x = element_text(colour = "black", size = base_size),
axis.line = element_line(color = bcggtheme::bcg_grey),
axis.line.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(size=(base_size+2)),
plot.subtitle = element_text(size=base_size)
) +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.text = element_text(size = (base_size-4))
}
else if (y_axis == TRUE) {
ggplot2::theme_classic() +
theme(text = element_text(family= base_family,
size = base_size),
axis.text.x = element_text(colour = "black", size = base_size),
axis.line = element_line(color = bcggtheme::bcg_grey),
#axis.line.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(size=(base_size+2)),
plot.subtitle = element_text(size=base_size)
) +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.text = element_text(size = (base_size-4))
}
else {"y_axis only takes the values TRUE and FALSE"}
return(ret)
}
bcg_theme_classic <- function(base_size = 18,
base_family = "sans",
legend = "bottom",
y_axis = FALSE) {
ret <- if(y_axis == FALSE) {
ggplot2::theme_classic() +
theme(text = element_text(family= base_family,
size = base_size),
axis.text.x = element_text(colour = "black", size = base_size),
axis.line = element_line(color = bcggtheme::bcg_grey),
axis.line.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(size=(base_size+2)),
plot.subtitle = element_text(size=base_size)
) +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.text = element_text(size = (base_size-4))
)
}
else if (y_axis == TRUE) {
ggplot2::theme_classic() +
theme(text = element_text(family= base_family,
size = base_size),
axis.text.x = element_text(colour = "black", size = base_size),
axis.line = element_line(color = bcggtheme::bcg_grey),
#axis.line.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(size=(base_size+2)),
plot.subtitle = element_text(size=base_size)
) +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.text = element_text(size = (base_size-4))
)
}
else {"y_axis only takes the values TRUE and FALSE"}
return(ret)
}
devtools::document()
rm(list = c("bcg_theme_classic"))
devtools::document()
2+2
install("bcggtheme")
setwd("..")
install("bcggtheme")
devtools::install("bcggtheme")
library(bcggtheme)
?bcg_theme_modern
devtools::document()
?bcggtheme
??bcggtheme
set("..")
setwd("..")
install("bcggtheme")
devtools::install("bcggtheme")
devtools::document()
devtools::install("bcggtheme")
setwd("..")
devtools::install("bcggtheme")
library(bcggtheme)
library(tidyverse)
setwd("./bcggtheme")
setwd("./Test")
setwd("./bcggtheme")
setwd("..")
install("bcggtheme")
setwd("..")
roxygen::install("bcggtheme")
setwd("..")
roxygen2::install("bcggtheme")
setwd("..")
devtools::install("bcggtheme")
devtools::use_vignette("my-vignette")
usethis::use_vignette("my-vignette")
library(devtools)
library(roxygen2)
# Update documentation
setwd("C:/Users/Jacqueline Zhu/Google Drive/R Data work/Packages/Test/bcggtheme")
devtools::document()
# Re-install package
setwd("C:/Users/Jacqueline Zhu/Google Drive/R Data work/Packages/Test")
devtools::install("bcggtheme")
devtools::build()
2+2
devtools::build_vignettes()
2+2
usethis::use_pipe()
devtools::document()
devtools::use_package("ggplot2")
usethis::use_package("ggplot2")
usethis::use_package("stringr")
?tools
?add_slide()
?ph_with()
?dml)
?dml
filename <- "Output/test.pptx"
# Creating the right names for outputting first
dir <- tools::file_path_sans_ext(filename)
filetype <- tools::file_ext(filename)
base_name <- tools::file_path_sans_ext(basename(filename))
half_slide_name <- stringr::str_c(dir,"/", base_name, "_halfslide.", filetype)
full_slide_name <- stringr::str_c(dir,"/", base_name, "_fullslide.", filetype)
?print()
usethis::use_package("officer")
usethis::use_package("rvg")
devtools::document()
# Re-install package
setwd("C:/Users/Jacqueline Zhu/Google Drive/R Data work/Packages/Test")
devtools::install("bcggtheme")
# Re-install package
setwd("C:/Users/Jacqueline Zhu/Google Drive/R Data work/Packages/Test")
devtools::install("bcggtheme")
remove.packages("glue")
install.packages("glue")
install.packages("glue")
devtools::install("bcggtheme")
install.packages("backports")
install.packages("backports")
devtools::install("bcggtheme")
usethis::use_data("colours.R")
usethis::use_data("bcg_mint")
#' Hex code for the main BCG green
#'
#' #2ABA75
#'
"bcg_green_1"
bcg_mint <- "#2ABA75"
usethis::use_data(bcg_mint)
bcg_green_bright <- "#29BA74"
bcg_green_mint <- "#3EAD92"
bcg_green_jade <- "#197A56"
bcg_green_forest <- "bcg_green_forest"
bcg_green_forest <- "#03522D"
bcg_yellow <- "#D4DF33"
bcg_blue_true <- "#295E7E"
bcg_red_cranberry <- "#670F31"
bcg_red_magenta <- "#E71C57"
bcg_grey_soft <- "#9A9A9A"
bcg_grey_medium <- "#6E6F73"
usethis::use_data(bcg_green_bright)
usethis::use_data(bcg_green_mint)
usethis::use_data(bcg_green_jade)
usethis::use_data(bcg_green_forest)
usethis::use_data(bcg_yellow)
usethis::use_data(bcg_blue_true)
usethis::use_data(bcg_red_magenta)
usethis::use_data(bcg_red_cranberry)
usethis::use_data(bcg_grey_medium)
usethis::use_data(bcg_grey_soft)
devtools::use_package("unikn")
usethis::use_package("unikn")
usethis::use_package("extrafont")
?loadfonts
